{"version":3,"sources":["main.js"],"names":["linkAction","document","getElementById","classList","remove","toggleSkills","skillsContent","getElementsByClassName","i","length","className","itemClass","sections","scrollY","window","pageYOffset","forEach","current","offsetHeight","sectionHeight","sectionTop","offsetTop","add","querySelector","sectionId","scrollHeader","nav","this","addEventListener","scrollUp","$","navMenu","navToggle","navClose","navLink","querySelectorAll","n","skillsHeader","parentNode","el","countUpContent","CUp","countUp","CountUp","dataset","countup","start","tabs","tab","target","tabContents","tabContent","modalViews","modalBtns","modalCloses","modalClick","modalBtn","modal","modalClose","swiperPortfolio","Swiper","cssMode","nextEl","navigation","prevEl","pagination","swiperTestimonial","loop","spaceBetween","grabCursor","clickable","568","slidesPerView","scrollActive","themeButton","iconTheme","darkTheme","localStorage","getItem","selectedIcon","body","contains","getCurrentIcon","selectedTheme","setItem","getCurrentTheme","adminNavToggle","mainContent","click","adminNav","hasClass","removeClass","addClass","toggleClass","width","pageViewChart","getContext","date1","pageViewChartCanvas","date2","date3","date4","date5","date6","value1","dateValue2","value2","dateValue3","value3","dateValue4","value4","dateValue5","value5","dateValue6","value6","dateValue1","desktopDevice","labels","datasets","font","family","pageViewChartConf","backgroundColor","borderWidth","borderColor","plugins","legend","display","deviceTypeChartCanvas","mobileDevice","mobile","desktop","Chart","deviceTypeChart","label","data","basictable","breakpoint"],"mappings":"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","file":"main.js","sourcesContent":["\r\n\r\n//========================= HOME JS  =========================\r\nif ($('#home').length > 0) {\r\n    /*==================== MENU SHOW Y HIDDEN ====================*/\r\n    const navMenu = document.getElementById('nav-menu'),\r\n        navToggle = document.getElementById('nav-toggle'),\r\n        navClose = document.getElementById('nav-close');\r\n\r\n    /*===== MENU SHOW =====*/\r\n    if(navToggle) {\r\n        navToggle.addEventListener('click', () => {\r\n            navMenu.classList.add('show-menu');\r\n        });\r\n    }\r\n\r\n    /*===== MENU HIDDEN =====*/\r\n    if(navClose) {\r\n        navClose.addEventListener('click', () => {\r\n            navMenu.classList.remove('show-menu');\r\n        });\r\n    }\r\n\r\n\r\n    /*==================== REMOVE MENU MOBILE ====================*/\r\n    const navLink = document.querySelectorAll('.nav__link')\r\n\r\n    function linkAction(){\r\n        const navMenu = document.getElementById('nav-menu')\r\n        navMenu.classList.remove('show-menu')\r\n    }\r\n    navLink.forEach(n => n.addEventListener('click', linkAction))\r\n\r\n    /*==================== ACCORDION SKILLS ====================*/\r\n    const skillsContent = document.getElementsByClassName('skills__content'),\r\n            skillsHeader = document.querySelectorAll('.skills__header')\r\n\r\n    function toggleSkills() {\r\n        let itemClass = this.parentNode.className\r\n\r\n        for(var i = 0; i < skillsContent.length; i++) {\r\n            skillsContent[i].className = 'skills__content skills__close';\r\n        }\r\n\r\n        if(itemClass === 'skills__content skills__close') {\r\n            this.parentNode.className = 'skills__content skills__open';\r\n        }\r\n    }\r\n\r\n    skillsHeader.forEach((el) => {\r\n        el.addEventListener('click', toggleSkills)\r\n    })\r\n\r\n    /*==================== COUNT UP ====================*/\r\n    const countUpContent = document.getElementsByClassName('countup')\r\n    for(var i = 0; i < countUpContent.length; i++) {\r\n        const CUp = new countUp.CountUp(countUpContent[i], countUpContent[i].dataset.countup)\r\n        CUp.start()\r\n    }\r\n\r\n    /*==================== QUALIFICATION TABS ====================*/\r\n    const tabs = document.querySelectorAll('[data-target]'),\r\n            tabContents = document.querySelectorAll('[data-content]')\r\n\r\n    tabs.forEach(tab => {\r\n        tab.addEventListener('click', () => {\r\n            const target = document.querySelector(tab.dataset.target)\r\n\r\n            tabContents.forEach(tabContent => {\r\n                tabContent.classList.remove('qualification__active')\r\n            })\r\n            target.classList.add('qualification__active')\r\n\r\n            tabs.forEach(tab => {\r\n                tab.classList.remove('qualification__active')\r\n            })\r\n            tab.classList.add('qualification__active')\r\n        })\r\n    })\r\n\r\n    /*==================== SERVICES MODAL ====================*/\r\n    const modalViews = document.querySelectorAll('.services__modal'),\r\n            modalBtns = document.querySelectorAll('.services__button'),\r\n            modalCloses = document.querySelectorAll('.services__modal-close')\r\n\r\n    let modal = function (modalClick) {\r\n        modalViews[modalClick].classList.add('active-modal')\r\n    }\r\n\r\n    modalBtns.forEach((modalBtn, i) => {\r\n        modalBtn.addEventListener('click', () => {\r\n            modal(i)\r\n        })\r\n    })\r\n\r\n    modalCloses.forEach((modalClose) => {\r\n        modalClose.addEventListener('click', () => {\r\n            modalViews.forEach((modalView) => {\r\n                modalView.classList.remove('active-modal')\r\n            })\r\n        })\r\n    })\r\n\r\n    /*==================== PORTFOLIO SWIPER  ====================*/\r\n    let swiperPortfolio = new Swiper(\".portfolio__container\", {\r\n        cssMode: true,\r\n        loop: true,\r\n        navigation: {\r\n        nextEl: \".portfolio__container .swiper-button-next\",\r\n        prevEl: \".portfolio__container .swiper-button-prev\",\r\n        },\r\n        pagination: {\r\n        el: \".portfolio__container .swiper-pagination\",\r\n        clickable: true,\r\n        },\r\n    });\r\n\r\n    /*==================== TESTIMONIAL ====================*/\r\n    let swiperTestimonial = new Swiper(\".testimonial__container\", {\r\n        loop: true,\r\n        grabCursor: true,\r\n        spaceBetween: 48,\r\n        pagination: {\r\n        el: \".testimonial__container .swiper-pagination\",\r\n        dynamicBullets: true,\r\n        clickable: true,\r\n        },\r\n        breakpoints: {\r\n            568:{\r\n                slidesPerView: 2,\r\n            }\r\n        }\r\n    });\r\n\r\n    /*==================== SCROLL SECTIONS ACTIVE LINK ====================*/\r\n    const sections = document.querySelectorAll('section[id]')\r\n\r\n    function scrollActive(){\r\n        const scrollY = window.pageYOffset\r\n\r\n        sections.forEach(current =>{\r\n            const sectionHeight = current.offsetHeight\r\n            const sectionTop = current.offsetTop - 50;\r\n            const sectionId = current.getAttribute('id');\r\n\r\n            if(scrollY > sectionTop && scrollY <= sectionTop + sectionHeight){\r\n                document.querySelector('.nav__menu a[href*=' + sectionId + ']').classList.add('active-link')\r\n            }else{\r\n                document.querySelector('.nav__menu a[href*=' + sectionId + ']').classList.remove('active-link')\r\n            }\r\n        })\r\n    }\r\n    window.addEventListener('scroll', scrollActive)\r\n\r\n    /*==================== CHANGE BACKGROUND HEADER ====================*/ \r\n    function scrollHeader(){\r\n        const nav = document.getElementById('header')\r\n        // When the scroll is greater than 200 viewport height, add the scroll-header class to the header tag\r\n        if(this.scrollY >= 80) nav.classList.add('scroll-header'); else nav.classList.remove('scroll-header')\r\n    }\r\n    window.addEventListener('scroll', scrollHeader)\r\n\r\n    /*==================== SHOW SCROLL UP ====================*/ \r\n    function scrollUp(){\r\n        const scrollUp = document.getElementById('scroll-up');\r\n        // When the scroll is higher than 560 viewport height, add the show-scroll class to the a tag with the scroll-top class\r\n        if(this.scrollY >= 560) scrollUp.classList.add('show-scroll'); else scrollUp.classList.remove('show-scroll')\r\n    }\r\n    window.addEventListener('scroll', scrollUp)\r\n\r\n    /*==================== DARK LIGHT THEME ====================*/ \r\n    const themeButton = document.getElementById('theme-button')\r\n    const darkTheme = 'dark-theme'\r\n    const iconTheme = 'uil-sun'\r\n\r\n    // Previously selected topic (if user selected)\r\n    const selectedTheme = localStorage.getItem('selected-theme')\r\n    const selectedIcon = localStorage.getItem('selected-icon')\r\n\r\n    // We obtain the current theme that the interface has by validating the dark-theme class\r\n    const getCurrentTheme = () => document.body.classList.contains(darkTheme) ? 'dark' : 'light'\r\n    const getCurrentIcon = () => themeButton.classList.contains(iconTheme) ? 'uil-moon' : 'uil-sun'\r\n\r\n    // We validate if the user previously chose a topic\r\n    if (selectedTheme) {\r\n    // If the validation is fulfilled, we ask what the issue was to know if we activated or deactivated the dark\r\n    document.body.classList[selectedTheme === 'dark' ? 'add' : 'remove'](darkTheme)\r\n    themeButton.classList[selectedIcon === 'uil-moon' ? 'add' : 'remove'](iconTheme)\r\n    }\r\n\r\n    // Activate / deactivate the theme manually with the button\r\n    themeButton.addEventListener('click', () => {\r\n        // Add or remove the dark / icon theme\r\n        document.body.classList.toggle(darkTheme)\r\n        themeButton.classList.toggle(iconTheme)\r\n        // We save the theme and the current icon that the user chose\r\n        localStorage.setItem('selected-theme', getCurrentTheme())\r\n        localStorage.setItem('selected-icon', getCurrentIcon())\r\n    })\r\n}\r\n\r\n//========================= ADMIN JS  =========================\r\nif ($('#admin').length > 0) {\r\n    /*===== MENU TOGGLE =====*/\r\n    const adminNav = $('#admin-header'),\r\n            adminNavToggle = $('#admin-nav-toggle'),\r\n            mainContent = $('.main');\r\n\r\n    adminNavToggle.click(function() {\r\n        adminNav.toggleClass(\"header--close\");\r\n        if (adminNav.hasClass('header--close')) {\r\n            $('.header__close-icon').removeClass('uil-times').addClass('uil-bars');\r\n        } else {\r\n            $('.header__close-icon').removeClass('uil-bars').addClass('uil-times');\r\n        }\r\n        mainContent.toggleClass(\"main--active\");\r\n    });\r\n\r\n    if($(window).width() < 768) {\r\n        adminNav.addClass(\"header--close\");\r\n        mainContent.removeClass(\"main--active\");\r\n        $('.header__close-icon').removeClass('uil-times').addClass('uil-bars');\r\n    }\r\n\r\n    /*===== HOME FIRST CHART =====*/\r\n    if ($('#pageViewChart' && '#deviceTypeChart').length > 0) {\r\n        $(function() {\r\n            /*===== PAGE VIEW CHART =====*/\r\n            let pageViewChartCanvas = document.getElementById('pageViewChart');\r\n            let pageViewChart = document.getElementById('pageViewChart').getContext('2d');\r\n            \r\n            let date1 = pageViewChartCanvas.dataset.date1\r\n            let date2 = pageViewChartCanvas.dataset.date2\r\n            let date3 = pageViewChartCanvas.dataset.date3\r\n            let date4 = pageViewChartCanvas.dataset.date4\r\n            let date5 = pageViewChartCanvas.dataset.date5\r\n            let date6 = pageViewChartCanvas.dataset.date6\r\n\r\n            let dateValue1 = pageViewChartCanvas.dataset.value1\r\n            let dateValue2 = pageViewChartCanvas.dataset.value2\r\n            let dateValue3 = pageViewChartCanvas.dataset.value3\r\n            let dateValue4 = pageViewChartCanvas.dataset.value4\r\n            let dateValue5 = pageViewChartCanvas.dataset.value5\r\n            let dateValue6 = pageViewChartCanvas.dataset.value6\r\n            \r\n            Chart.defaults.font.family = 'Poppins';\r\n            let pageViewChartConf = new Chart(pageViewChart, {\r\n                type:'bar',\r\n                data:{\r\n                    labels:[date6, date5, date4, date3, date2, date1],\r\n                    datasets:[{\r\n                        label:'Views',\r\n                        data:[\r\n                            dateValue6,\r\n                            dateValue5,\r\n                            dateValue4,\r\n                            dateValue3,\r\n                            dateValue2,\r\n                            dateValue1\r\n                        ],\r\n                        backgroundColor: '#7b90f9',\r\n                        borderWidth: 3,\r\n                        borderColor: '#576ee0',\r\n                    }]\r\n                },\r\n                options:{\r\n                    plugins: {\r\n                        legend: {\r\n                            display: false,\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n\r\n            /*===== DEVICE TYPE CHART =====*/\r\n            let deviceTypeChartCanvas = document.getElementById('deviceTypeChart')\r\n            let deviceTypeChart = document.getElementById('deviceTypeChart').getContext('2d');\r\n\r\n            let desktopDevice = deviceTypeChartCanvas.dataset.desktop\r\n            let mobileDevice = deviceTypeChartCanvas.dataset.mobile\r\n\r\n            let deviceTypeChartConf = new Chart(deviceTypeChart, {\r\n                type:'doughnut',\r\n                data:{\r\n                    labels:['Desktop', 'Mobile'],\r\n                    datasets:[{\r\n                        label:'Views',\r\n                        data:[\r\n                            desktopDevice,\r\n                            mobileDevice,\r\n                        ],\r\n                        backgroundColor: [\r\n                            '#576ee0',\r\n                            '#7b90f9'\r\n                        ],\r\n                        /* borderWidth: 3,\r\n                        borderColor: '#576ee0', */\r\n                    }]\r\n                },\r\n                /* options:{\r\n                    plugins: {\r\n                        legend: {\r\n                            display: false,\r\n                        }\r\n                    }\r\n                } */\r\n            });\r\n        });\r\n    }\r\n\r\n    $('.table').basictable({\r\n        breakpoint: 1024,\r\n    });\r\n}"]}